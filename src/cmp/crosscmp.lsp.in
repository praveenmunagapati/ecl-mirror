;;;;  -*- Mode: Lisp; Syntax: Common-Lisp; Package: C -*-
;;;;
;;;;  Copyright (c) 2011, Sylvain Ageneau
;;;;
;;;;    This program is free software; you can redistribute it and/or
;;;;    modify it under the terms of the GNU Library General Public
;;;;    License as published by the Free Software Foundation; either
;;;;    version 2 of the License, or (at your option) any later version.
;;;;
;;;;    See file '../Copyright' for full details.

;;;; CROSSCMP -- Cross compiler

(in-package "COMPILER")

(defmacro with-crosscomp-env (body)
  `(let ((old-translation (si::pathname-translations "SYS")))
     (unwind-protect
	  (progn
	    (si::pathname-translations "SYS" '(("**;*.*.*" "@ecldir\@/**/*.*")))
	    (let ((*features* @LSP_FEATURES@)
		  (*cmpinclude* "<ecl/ecl-cmp.h>")
		  (*cc* "@ECL_CC@")
		  (*ld* "@ECL_CC@")
		  (*ranlib* "@RANLIB@")
		  (*ar* "@AR@")
		  (*cc-flags* "@CPPFLAGS@ @CFLAGS@ @ECL_CFLAGS@")
		  (*cc-optimize* #-msvc "-O2"
				 #+msvc "@CFLAGS_OPTIMIZE@")
		  (*ld-format* #-msvc "~A -o ~S -L~S ~{~S ~} ~@[~S~]~{ '~A'~} ~A"
			       #+msvc "~A -Fe~S~* ~{~S ~} ~@[~S~]~{ '~A'~} ~A")
		  (*cc-format* #-msvc "~A -I. \"-I~A\" ~A ~:[~*~;~A~] -w -c \"~A\" -o \"~A\"~{ '~A'~}"
			       #+msvc "~A -I. -I\"~A\" ~A ~:[~*~;~A~] -w -c \"~A\" -Fo\"~A\"~{ '~A'~}")
		  
		  (*ld-flags* (if (member :dlopen *features*)
				  "@LDFLAGS@ -L@libdir\@ -lecl @CORE_LIBS@ @FASL_LIBS@ @LIBS@"
				  (if (member :mscv *features*)
				      "@LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
				      #+msvc "@LDFLAGS@ ecl.lib @CLIBS@")))
		  
		  #+dlopen
		  (*ld-shared-flags* #-msvc "@SHARED_LDFLAGS@ @LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
				     #+msvc "@SHARED_LDFLAGS@ @LDFLAGS@ ecl.lib @CLIBS@")
		  #+dlopen
		  (*ld-bundle-flags* #-msvc "@BUNDLE_LDFLAGS@ @LDFLAGS@ -L@libdir\@ -lecl @FASL_LIBS@ @LIBS@"
				     #+msvc "@BUNDLE_LDFLAGS@ @LDFLAGS@ ecl.lib @CLIBS@")
		  
		  (+shared-library-prefix+ "@SHAREDPREFIX@")
		  (+shared-library-extension+ "@SHAREDEXT@")
		  (+shared-library-format+ "@SHAREDPREFIX@~a.@SHAREDEXT@")
		  (+static-library-prefix+ "@LIBPREFIX@")
		  (+static-library-extension+ "@LIBEXT@")
		  (+static-library-format+ "@LIBPREFIX@~a.@LIBEXT@")
		  (+object-file-extension+ "@OBJEXT@")
		  (+executable-file-format+ "~a@EXEEXT@")
		  
		  (*ecl-include-directory* "@includedir\@")
		  (*ecl-library-directory* "@libdir\@")
		  
		  (*ld-rpath*
		   (let ((x "@ECL_LDRPATH@"))
		     (and (plusp (length x))
			  (format nil x *ecl-library-directory*)))))
	      (,@body)))
       (si::pathname-translations "SYS" old-translation))))